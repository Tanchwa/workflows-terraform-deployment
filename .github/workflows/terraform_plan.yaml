name: _terraform_plan

on:
  workflow_call:
    inputs:
      terraform_version:
        description: 'Terraform version to use'
        required: true
        default: '1.13'
      working_directory:
        description: 'Directory containing Terraform configuration files'
        required: true
        default: '.'
      

jobs:
  terraform:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    outputs:
      plan_file: ${{ steps.plan.outputs.plan_file }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working_directory }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Determine Provider
      id: determine_provider
      uses: ./.github/workflows/_determine_provider.yaml
      secrets: inherit

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ inputs.terraform_version }}


    - name: Terraform Init Azure
      if: steps.determine_provider.outputs.azure == 'true'
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      run: |
        terraform init \
        -backend-config="storage_account_name=${{ secrets.TF_AZ_STATE_STORE }}" \
        -backend-config="container_name=${{ secrets.TF_AZ_STATE_CONTAINER }}" \
        -backend-config="key=terraform.tfstate" \

    - name: Terraform Init AWS
      if: steps.determine_provider.outputs.aws == 'true'
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        terraform init \
        -backend-config="bucket=${{ secrets.TF_AWS_STATE_BUCKET }}" \
        -backend-config="key=terraform.tfstate" \
        -backend-config="region=${{ secrets.TF_AWS_STATE_REGION }}" \
        -backend-config="access_key=${{ secrets.TF_AWS_ACCESS_KEY }}" \

    - name: Terraform Init GCP
      if: steps.determine_provider.outputs.gcp == 'true'
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      run: |
        terraform init \
        -backend-config="bucket=${{ secrets.TF_GCP_STATE_BUCKET }}" 


    ## we run the same plan command for all providers to get the plan output
    - name: Terraform Plan
      id: plan
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      run: |
        terraform plan -input=false \
        -out=tfplan \
        echo "Terraform plan created successfully."
        cat tfplan
        echo "::setOutput name=plan_file::$(cat tfplan)"

#TODO ENSURE GCP IS SETUP CORRECTLY
